{
  "openapi": "3.0.0",
  "info": {
    "description": "Adding steel items ",
    "version": "1.0.0",
    "title": "Flask Swagger Ui",
    "contact": {
      "email": "western.ant2@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/license/MIT"
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "Item request",
      "description": "Requesting the post from the database"
    }
  ],
  "paths": {
    "/aggregations": {
      "get": {
        "tags": [
          "Get statistic request"
        ],
        "summary": "Returns the statistical information about items",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
            }
          }
        }
      }
      },
     "/orders_count": {
      "get": {
        "tags": [
          "Get statistic request"
        ],
        "summary": "Returns the count of orders",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
            }
          }
        }
      }
      },
    "/items": {
      "get": {
        "tags": [
          "Item request"
        ],
        "summary": "Returns all available items",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
            }
          }
        }
      },
      "post": {
        "tags": [
          "Item request"
        ],
        "summary": "Add a new item",
        "requestBody": {
          "description": "Requesting post object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/items",
                "image": {

                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            }
          },
          "400": {
            "description": "Failed"
          }
        }
      }
    },
    "/bought_items/": {
      "get": {
        "tags": [
          "Bought items request"
        ],
        "summary": "Get all BOUGHT items",
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/item"
            }
          },
          "400": {
            "description": "Failed, wrong data!"
          },
          "404": {
            "description": "Failed. Post was not found."
          }
        }
      }
    },
    "/orders/": {
      "get": {
        "tags": [
          "Order request"
        ],
        "summary": "Get all orders",
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/orders"
            }
          },
          "400": {
            "description": "Failed, wrong data!"
          },
          "404": {
            "description": "Failed. Post was not found."
          }
        }
      },
      "post": {
        "tags": [
          "Order request"
        ],
        "summary": "Add a new order",
        "requestBody": {
          "description": "Requesting order object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/orders"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            }
          },
          "400": {
            "description": "Failed"
          }
        }
      }
    },
    "/item/{uuid}": {
      "get": {
        "tags": [
          "Item request"
        ],
        "summary": "Get the item with the given UUID",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "description": "Post request uuid",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/item"
            }
          },
          "400": {
            "description": "Failed, wrong data!"
          },
          "404": {
            "description": "Failed. Post was not found."
          }
        }
      },
      "put": {
        "summary": "Edit an item by UUID",
        "tags": [
          "Item request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "description": "Post Request uuid",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Post Request Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/item"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/item"
            }
          },
          "400": {
            "description": "Failed.Wrong data"
          }
        }
      },
      "delete": {
        "summary": "Delete Item by UUID",
        "tags": [
          "Item request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "description": "Post Request uuid",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK",
            "schema": {
              "$ref": "#components/schemas/uuid"
            }
          },
          "400": {
            "description": "Failed Misunedrstood Request"
          }
        }
      }
    },
    "/order/{uuid}": {
      "get": {
        "tags": [
          "Order request"
        ],
        "summary": "Get the order with the given UUID",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "description": "Post request uuid",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/order"
            }
          },
          "400": {
            "description": "Failed, wrong data!"
          },
          "404": {
            "description": "Failed. Post was not found."
          }
        }
      },
      "put": {
        "summary": "Edit an order by UUID",
        "tags": [
          "Order request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "description": "Post Request uuid",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Post Request Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/orders"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/orders"
            }
          },
          "400": {
            "description": "Failed.Wrong data"
          }
        }
      },
      "delete": {
        "summary": "Delete order by UUID",
        "tags": [
          "Order request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "description": "Post Request uuid",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK",
            "schema": {
              "$ref": "#components/schemas/uuid"
            }
          },
          "400": {
            "description": "Failed Misunedrstood Request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "uuid": {
        "properties": {
          "uuid": {
            "type": "string"
          }
        }
      },
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "format": "string"
          },
          "product_name": {
            "type": "string",
            "format": "string"
          },
          "description": {
            "type": "string",
            "format": "string"
          },
        "price": {
          "type": "number",
          "format": "number"
        },
          "category": {
          "type": "string",
          "format": "string"
        },
          "url": {
          "type": "string",
          "format": "string"
        },
          "is_bought": {
          "type": "boolean"
        }
        }
    },
       "orders": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "format": "string"
          },
          "email": {
            "type": "string",
            "format": "string"
          },
          "address": {
            "type": "string",
            "format": "string"
          },
        "additional_info": {
          "type": "string",
          "format": "string"
        }
        }
    },
      "item": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "format": "string"
          },
          "product_name": {
            "type": "string",
            "format": "string"
          },
          "description": {
            "type": "string",
            "format": "string"
          },
        "price": {
          "type": "number",
          "format": "number"
        },
          "category": {
          "type": "string",
          "format": "string"
        },
          "url": {
          "type": "string",
          "format": "string"
        },
          "is_bought": {
          "type": "boolean",
            "format":"false"
        }
        }
    }
  }
  }
}